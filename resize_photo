#!/usr/bin/env python3

# resizes original image such that:
#  smaller dimension (between width and height) becomes 1024, and
#  other dimension is resized appropriately to maintain original aspect ratio
#
# requires pillow package from PyPI

from sys import argv
from os import path, utime
from PIL import Image
from pathlib import Path

for src_filename in argv[1:]:
    src_pathname = Path(src_filename)
    print(f"{src_pathname} ... resizing photo ...", end="")
    base_pathname = src_pathname.stem
    resized_filename = base_pathname + "_R1024" + src_pathname.suffix
    atime = path.getatime(src_filename)
    mtime = path.getmtime(src_filename)
    try:
        with Image.open(src_filename) as im:
            #print(f"  original width {im.width}, height {im.height} ...", end="")
            if im.width < im.height:
                ratio=1024/im.width
                newwidth=1024
                newheight=int(im.height * ratio)
            else:
                ratio=1024/im.height
                newheight=1024
                newwidth=int(im.width * ratio)
            #print(f"  new width {newwidth}, height {newheight} ...", end="")
            im.resize((newwidth,newheight))
            exif = im.getexif()
            exif.update({256:newwidth,257:newheight})
            im.save(resized_filename, exif=exif)
            utime(resized_filename, (atime, mtime))
        #remove(src_filename)
    except (OSError,) as err:
        print(f"Problem resizing {src_filename}: {err}.")
        continue
    print(" success.")
