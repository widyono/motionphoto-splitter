#!/usr/bin/env python3

# removes motionphoto segment of *.MP.jpg

from sys import argv
from os import path
from mmap import mmap, ACCESS_READ

for src_filename in argv[1:]:
    print(f"{src_filename} ... removing Google motion photo ...", end="")
    base_pathname = src_filename.replace('.MP.jpg','')
    stripped_filename = base_pathname + ".MP_STRIPPED.jpg"
    atime = path.getatime(src_filename)
    mtime = path.getmtime(src_filename)
    try:
        with open(src_filename,'rb') as f_in:
            mm = mmap(f_in.fileno(),0,access=ACCESS_READ)
            file_size = mm.size()
            motionphoto_headeroffset = mm.find(b'Item:Semantic="MotionPhoto"')
            if motionphoto_headeroffset > 0:
                #print(f"\nmotionphoto_headeroffset = {motionphoto_headeroffset} (location of 'MotionPhoto' text in header)")
                motionphoto_lengthoffset = mm.find(b'Item:Length="',motionphoto_headeroffset)
                #print(f"motionphoto_lengthoffset = {motionphoto_lengthoffset} (location of first 'Length' field after above)")
                motionphoto_lengthending = mm.find(b'"',motionphoto_lengthoffset+13)
                #print(f"motionphoto_lengthending = {motionphoto_lengthending} (location of double quote at least 13 characters after above)")
                mm.seek(motionphoto_lengthoffset + 13)
                motionphoto_length_text = mm.read(motionphoto_lengthending - motionphoto_lengthoffset - 13)
                #print(f"motionphoto_length_text = {motionphoto_length_text}")
                motionphoto_length = int(motionphoto_length_text)
                motionphoto_datastart = file_size - motionphoto_length
                mm.seek(0)
                with open(stripped_filename,'wb') as f_out:
                    f_out.write(mm.read(motionphoto_datastart))
            else:
                print(" could not find 'MotionPhoto' header ...", end="")
            mm.close()
    except (OSError,) as err:
        print(f"Problem stripping {src_filename}: {err}.")
        continue
    print(" success.")
